# this is the build file for project ta_lib
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(ta_lib LANGUAGES C CXX)

# target
add_executable(gen_code "")
set_target_properties(gen_code PROPERTIES OUTPUT_NAME "gen_code")
set_target_properties(gen_code PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(gen_code ta_common ta_abstract ta_func)
target_include_directories(gen_code PRIVATE
    include
    ta_common
    ta_abstract
    ta_abstract/frames
)
target_compile_definitions(gen_code PRIVATE
    WIN32
)
if(MSVC)
    target_compile_options(gen_code PRIVATE -W3)
else()
    target_compile_options(gen_code PRIVATE -Wall)
endif()
if(MSVC)
    target_compile_options(gen_code PRIVATE -Zi)
else()
    target_compile_options(gen_code PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET gen_code PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(gen_code PRIVATE
    ta_func
    ta_abstract
    ta_common
    libcmtd
)
target_link_directories(gen_code PRIVATE
    build/windows/x64/debug
)
target_link_options(gen_code PRIVATE
    /DEFAULTLIB:libcmtd
)
target_sources(gen_code PRIVATE
    tools/gen_code/gen_code.c
    ta_abstract/ta_abstract.c
    ta_abstract/ta_def_ui.c
    ta_abstract/tables/table_a.c
    ta_abstract/tables/table_b.c
    ta_abstract/tables/table_c.c
    ta_abstract/tables/table_d.c
    ta_abstract/tables/table_e.c
    ta_abstract/tables/table_f.c
    ta_abstract/tables/table_g.c
    ta_abstract/tables/table_h.c
    ta_abstract/tables/table_i.c
    ta_abstract/tables/table_j.c
    ta_abstract/tables/table_k.c
    ta_abstract/tables/table_l.c
    ta_abstract/tables/table_m.c
    ta_abstract/tables/table_n.c
    ta_abstract/tables/table_o.c
    ta_abstract/tables/table_p.c
    ta_abstract/tables/table_q.c
    ta_abstract/tables/table_r.c
    ta_abstract/tables/table_s.c
    ta_abstract/tables/table_t.c
    ta_abstract/tables/table_u.c
    ta_abstract/tables/table_v.c
    ta_abstract/tables/table_w.c
    ta_abstract/tables/table_x.c
    ta_abstract/tables/table_y.c
    ta_abstract/tables/table_z.c
)

# target
add_library(ta_abstract STATIC "")
set_target_properties(ta_abstract PROPERTIES OUTPUT_NAME "ta_abstract")
set_target_properties(ta_abstract PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(ta_abstract ta_common)
target_include_directories(ta_abstract PRIVATE
    include
    ta_abstract
    ta_common
    ta_abstract/frames
)
if(MSVC)
    target_compile_options(ta_abstract PRIVATE -W3)
else()
    target_compile_options(ta_abstract PRIVATE -Wall)
endif()
if(MSVC)
    target_compile_options(ta_abstract PRIVATE -Zi)
else()
    target_compile_options(ta_abstract PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET ta_abstract PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ta_abstract PRIVATE
    ta_common
    libcmtd
)
target_link_directories(ta_abstract PRIVATE
    build/windows/x64/debug
)
target_link_options(ta_abstract PRIVATE
    /DEFAULTLIB:libcmtd
)
target_sources(ta_abstract PRIVATE
    ta_abstract/ta_abstract.c
    ta_abstract/ta_def_ui.c
    ta_abstract/ta_func_api.c
    ta_abstract/ta_group_idx.c
    ta_abstract/tables/table_a.c
    ta_abstract/tables/table_b.c
    ta_abstract/tables/table_c.c
    ta_abstract/tables/table_d.c
    ta_abstract/tables/table_e.c
    ta_abstract/tables/table_f.c
    ta_abstract/tables/table_g.c
    ta_abstract/tables/table_h.c
    ta_abstract/tables/table_i.c
    ta_abstract/tables/table_j.c
    ta_abstract/tables/table_k.c
    ta_abstract/tables/table_l.c
    ta_abstract/tables/table_m.c
    ta_abstract/tables/table_n.c
    ta_abstract/tables/table_o.c
    ta_abstract/tables/table_p.c
    ta_abstract/tables/table_q.c
    ta_abstract/tables/table_r.c
    ta_abstract/tables/table_s.c
    ta_abstract/tables/table_t.c
    ta_abstract/tables/table_u.c
    ta_abstract/tables/table_v.c
    ta_abstract/tables/table_w.c
    ta_abstract/tables/table_x.c
    ta_abstract/tables/table_y.c
    ta_abstract/tables/table_z.c
    ta_abstract/frames/ta_frame.c
)

# target
add_library(ta_common STATIC "")
set_target_properties(ta_common PROPERTIES OUTPUT_NAME "ta_common")
set_target_properties(ta_common PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(ta_common PRIVATE
    include
)
if(MSVC)
    target_compile_options(ta_common PRIVATE -W3)
else()
    target_compile_options(ta_common PRIVATE -Wall)
endif()
if(MSVC)
    target_compile_options(ta_common PRIVATE -Zi)
else()
    target_compile_options(ta_common PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET ta_common PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ta_common PRIVATE
    libcmtd
)
target_link_options(ta_common PRIVATE
    /DEFAULTLIB:libcmtd
)
target_sources(ta_common PRIVATE
    ta_common/ta_global.c
    ta_common/ta_retcode.c
    ta_common/ta_version.c
)

# target
add_library(ta_func STATIC "")
set_target_properties(ta_func PROPERTIES OUTPUT_NAME "ta_func")
set_target_properties(ta_func PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(ta_func ta_common)
target_include_directories(ta_func PRIVATE
    include
    ta_common
)
if(MSVC)
    target_compile_options(ta_func PRIVATE -W3)
else()
    target_compile_options(ta_func PRIVATE -Wall)
endif()
if(MSVC)
    target_compile_options(ta_func PRIVATE -Zi)
else()
    target_compile_options(ta_func PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET ta_func PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ta_func PRIVATE
    ta_common
    libcmtd
)
target_link_directories(ta_func PRIVATE
    build/windows/x64/debug
)
target_link_options(ta_func PRIVATE
    /DEFAULTLIB:libcmtd
)
target_sources(ta_func PRIVATE
    ta_func/ta_ACOS.c
    ta_func/ta_AD.c
    ta_func/ta_ADD.c
    ta_func/ta_ADOSC.c
    ta_func/ta_ADX.c
    ta_func/ta_ADXR.c
    ta_func/ta_APO.c
    ta_func/ta_AROON.c
    ta_func/ta_AROONOSC.c
    ta_func/ta_ASIN.c
    ta_func/ta_ATAN.c
    ta_func/ta_ATR.c
    ta_func/ta_AVGPRICE.c
    ta_func/ta_BBANDS.c
    ta_func/ta_BETA.c
    ta_func/ta_BOP.c
    ta_func/ta_CCI.c
    ta_func/ta_CDL2CROWS.c
    ta_func/ta_CDL3BLACKCROWS.c
    ta_func/ta_CDL3INSIDE.c
    ta_func/ta_CDL3LINESTRIKE.c
    ta_func/ta_CDL3OUTSIDE.c
    ta_func/ta_CDL3STARSINSOUTH.c
    ta_func/ta_CDL3WHITESOLDIERS.c
    ta_func/ta_CDLABANDONEDBABY.c
    ta_func/ta_CDLADVANCEBLOCK.c
    ta_func/ta_CDLBELTHOLD.c
    ta_func/ta_CDLBREAKAWAY.c
    ta_func/ta_CDLCLOSINGMARUBOZU.c
    ta_func/ta_CDLCONCEALBABYSWALL.c
    ta_func/ta_CDLCOUNTERATTACK.c
    ta_func/ta_CDLDARKCLOUDCOVER.c
    ta_func/ta_CDLDOJI.c
    ta_func/ta_CDLDOJISTAR.c
    ta_func/ta_CDLDRAGONFLYDOJI.c
    ta_func/ta_CDLENGULFING.c
    ta_func/ta_CDLEVENINGDOJISTAR.c
    ta_func/ta_CDLEVENINGSTAR.c
    ta_func/ta_CDLGAPSIDESIDEWHITE.c
    ta_func/ta_CDLGRAVESTONEDOJI.c
    ta_func/ta_CDLHAMMER.c
    ta_func/ta_CDLHANGINGMAN.c
    ta_func/ta_CDLHARAMI.c
    ta_func/ta_CDLHARAMICROSS.c
    ta_func/ta_CDLHIGHWAVE.c
    ta_func/ta_CDLHIKKAKE.c
    ta_func/ta_CDLHIKKAKEMOD.c
    ta_func/ta_CDLHOMINGPIGEON.c
    ta_func/ta_CDLIDENTICAL3CROWS.c
    ta_func/ta_CDLINNECK.c
    ta_func/ta_CDLINVERTEDHAMMER.c
    ta_func/ta_CDLKICKING.c
    ta_func/ta_CDLKICKINGBYLENGTH.c
    ta_func/ta_CDLLADDERBOTTOM.c
    ta_func/ta_CDLLONGLEGGEDDOJI.c
    ta_func/ta_CDLLONGLINE.c
    ta_func/ta_CDLMARUBOZU.c
    ta_func/ta_CDLMATCHINGLOW.c
    ta_func/ta_CDLMATHOLD.c
    ta_func/ta_CDLMORNINGDOJISTAR.c
    ta_func/ta_CDLMORNINGSTAR.c
    ta_func/ta_CDLONNECK.c
    ta_func/ta_CDLPIERCING.c
    ta_func/ta_CDLRICKSHAWMAN.c
    ta_func/ta_CDLRISEFALL3METHODS.c
    ta_func/ta_CDLSEPARATINGLINES.c
    ta_func/ta_CDLSHOOTINGSTAR.c
    ta_func/ta_CDLSHORTLINE.c
    ta_func/ta_CDLSPINNINGTOP.c
    ta_func/ta_CDLSTALLEDPATTERN.c
    ta_func/ta_CDLSTICKSANDWICH.c
    ta_func/ta_CDLTAKURI.c
    ta_func/ta_CDLTASUKIGAP.c
    ta_func/ta_CDLTHRUSTING.c
    ta_func/ta_CDLTRISTAR.c
    ta_func/ta_CDLUNIQUE3RIVER.c
    ta_func/ta_CDLUPSIDEGAP2CROWS.c
    ta_func/ta_CDLXSIDEGAP3METHODS.c
    ta_func/ta_CEIL.c
    ta_func/ta_CMO.c
    ta_func/ta_CORREL.c
    ta_func/ta_COS.c
    ta_func/ta_COSH.c
    ta_func/ta_DEMA.c
    ta_func/ta_DIV.c
    ta_func/ta_DX.c
    ta_func/ta_EMA.c
    ta_func/ta_EXP.c
    ta_func/ta_FLOOR.c
    ta_func/ta_HT_DCPERIOD.c
    ta_func/ta_HT_DCPHASE.c
    ta_func/ta_HT_PHASOR.c
    ta_func/ta_HT_SINE.c
    ta_func/ta_HT_TRENDLINE.c
    ta_func/ta_HT_TRENDMODE.c
    ta_func/ta_KAMA.c
    ta_func/ta_LINEARREG.c
    ta_func/ta_LINEARREG_ANGLE.c
    ta_func/ta_LINEARREG_INTERCEPT.c
    ta_func/ta_LINEARREG_SLOPE.c
    ta_func/ta_LN.c
    ta_func/ta_LOG10.c
    ta_func/ta_MA.c
    ta_func/ta_MACD.c
    ta_func/ta_MACDEXT.c
    ta_func/ta_MACDFIX.c
    ta_func/ta_MAMA.c
    ta_func/ta_MAVP.c
    ta_func/ta_MAX.c
    ta_func/ta_MAXINDEX.c
    ta_func/ta_MEDPRICE.c
    ta_func/ta_MFI.c
    ta_func/ta_MIDPOINT.c
    ta_func/ta_MIDPRICE.c
    ta_func/ta_MIN.c
    ta_func/ta_MININDEX.c
    ta_func/ta_MINMAX.c
    ta_func/ta_MINMAXINDEX.c
    ta_func/ta_MINUS_DI.c
    ta_func/ta_MINUS_DM.c
    ta_func/ta_MOM.c
    ta_func/ta_MULT.c
    ta_func/ta_NATR.c
    ta_func/ta_NVI.c
    ta_func/ta_OBV.c
    ta_func/ta_PLUS_DI.c
    ta_func/ta_PLUS_DM.c
    ta_func/ta_PPO.c
    ta_func/ta_PVI.c
    ta_func/ta_ROC.c
    ta_func/ta_ROCP.c
    ta_func/ta_ROCR.c
    ta_func/ta_ROCR100.c
    ta_func/ta_RSI.c
    ta_func/ta_SAR.c
    ta_func/ta_SAREXT.c
    ta_func/ta_SIN.c
    ta_func/ta_SINH.c
    ta_func/ta_SMA.c
    ta_func/ta_SQRT.c
    ta_func/ta_STDDEV.c
    ta_func/ta_STOCH.c
    ta_func/ta_STOCHF.c
    ta_func/ta_STOCHRSI.c
    ta_func/ta_SUB.c
    ta_func/ta_SUM.c
    ta_func/ta_T3.c
    ta_func/ta_TAN.c
    ta_func/ta_TANH.c
    ta_func/ta_TEMA.c
    ta_func/ta_TRANGE.c
    ta_func/ta_TRIMA.c
    ta_func/ta_TRIX.c
    ta_func/ta_TSF.c
    ta_func/ta_TYPPRICE.c
    ta_func/ta_ULTOSC.c
    ta_func/ta_utility.c
    ta_func/ta_VAR.c
    ta_func/ta_WCLPRICE.c
    ta_func/ta_WILLR.c
    ta_func/ta_WMA.c
)

# target
add_executable(ta_regtest "")
set_target_properties(ta_regtest PROPERTIES OUTPUT_NAME "ta_regtest")
set_target_properties(ta_regtest PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(ta_regtest ta_common ta_abstract ta_func)
target_include_directories(ta_regtest PRIVATE
    include
    tools/ta_regtest
    ta_common
    ta_func
)
if(MSVC)
    target_compile_options(ta_regtest PRIVATE -W3)
else()
    target_compile_options(ta_regtest PRIVATE -Wall)
endif()
if(MSVC)
    target_compile_options(ta_regtest PRIVATE -Zi)
else()
    target_compile_options(ta_regtest PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET ta_regtest PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ta_regtest PRIVATE
    ta_func
    ta_abstract
    ta_common
    libcmtd
)
target_link_directories(ta_regtest PRIVATE
    build/windows/x64/debug
)
target_link_options(ta_regtest PRIVATE
    /DEFAULTLIB:libcmtd
    /FORCE
)
target_sources(ta_regtest PRIVATE
    tools/ta_regtest/ta_gDataClose.c
    tools/ta_regtest/ta_gDataHigh.c
    tools/ta_regtest/ta_gDataLow.c
    tools/ta_regtest/ta_gDataOpen.c
    tools/ta_regtest/ta_regtest.c
    tools/ta_regtest/test_abstract.c
    tools/ta_regtest/test_data.c
    tools/ta_regtest/test_internals.c
    tools/ta_regtest/test_util.c
    tools/ta_regtest/ta_test_func/test_1in_1out.c
    tools/ta_regtest/ta_test_func/test_1in_2out.c
    tools/ta_regtest/ta_test_func/test_adx.c
    tools/ta_regtest/ta_test_func/test_bbands.c
    tools/ta_regtest/ta_test_func/test_candlestick.c
    tools/ta_regtest/ta_test_func/test_ma.c
    tools/ta_regtest/ta_test_func/test_macd.c
    tools/ta_regtest/ta_test_func/test_minmax.c
    tools/ta_regtest/ta_test_func/test_mom.c
    tools/ta_regtest/ta_test_func/test_per_ema.c
    tools/ta_regtest/ta_test_func/test_per_hl.c
    tools/ta_regtest/ta_test_func/test_per_hlc.c
    tools/ta_regtest/ta_test_func/test_per_hlcv.c
    tools/ta_regtest/ta_test_func/test_per_ohlc.c
    tools/ta_regtest/ta_test_func/test_po.c
    tools/ta_regtest/ta_test_func/test_rsi.c
    tools/ta_regtest/ta_test_func/test_sar.c
    tools/ta_regtest/ta_test_func/test_stddev.c
    tools/ta_regtest/ta_test_func/test_stoch.c
    tools/ta_regtest/ta_test_func/test_trange.c
)

